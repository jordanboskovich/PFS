<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Admin Notes</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Arvo:ital,wght@0,400;0,700;1,400;1,700&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700&display=swap');
    body { 
      background-color: #f5f5f5;
      font-family: 'Montserrat', sans-serif;
    }

    h2 {
      color: #333;
    }

    p {
      margin-bottom: 5px;
      color: #555;
    }

    strong {
      color: #000;
    }

    .table {
      margin-top: 20px;
    }
  </style>
</head>
<body>
  <%- include('partials/admin_navbar') %>
  <br><br>
  
  <div class="container">

    <button class="btn btn-primary mb-3 mr-2" onclick="downloadNotes()">Download Notes</button>
    <button class="btn btn-danger mb-3" onclick="clearNotes()">Clear Notes</button>

    <h2>Meeting Notes</h2>
    <table class="table table-bordered">
      <thead>
        <tr>
          <th>Mentor</th>
          <th>Date</th>
          <th>Note</th>
        </tr>
      </thead>
      <tbody>
        <% notes.forEach(note => { %>
          <tr>
            <td><%= note.mentor.name %></td>
            <td><%= new Date(note.date).toLocaleDateString() %></td>
            <td><%= note.content %></td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  </div>

  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/xlsx/dist/xlsx.full.min.js"></script>
  <script>
  function downloadNotes() {
    const data = [];
    const rows = document.querySelectorAll("table tbody tr");
    rows.forEach(row => {
      const cells = row.querySelectorAll("td");
      const rowData = {
        Mentor: cells[0].innerText,
        Date: cells[1].innerText,
        Note: cells[2].innerText
      };
      data.push(rowData);
    });

    // Create Excel workbook and worksheet
    const wb = XLSX.utils.book_new();
    const ws = XLSX.utils.json_to_sheet(data);
    XLSX.utils.book_append_sheet(wb, ws, "Meeting Notes");

    // Download the file
    XLSX.writeFile(wb, "Meeting_Notes.xlsx");
  }
  function clearNotes() {
    if (confirm("Are you sure you want to clear the meeting notes? This action cannot be undone. Save notes in a spreadsheet before deleting.")) {
      fetch('/admin/clear_notes', {
        method: 'DELETE'
      }).then(response => response.json())
        .then(data => {
          if (data.success) {
            window.location.reload();
          } else {
            alert("Error clearing notes.");
          }
        });
    }
  }
  </script>

</body>
</html>
